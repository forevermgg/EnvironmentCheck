plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dev.rikka.tools.refine'
}

apply from: "../config/git-version.gradle"
apply from: "flatbuffers.gradle"
apply from: "double-conversion.gradle"
android {
    compileSdk 34

    defaultConfig {
        applicationId "com.mgg.environmentcheck"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        versionCode gitVersionCode
        versionName gitVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DFLATBUFFERS_SRC=${rootProject.projectDir}/third_party/flatbuffers"
                arguments "-DDOUBLE_CONVERSION_SRC=${rootProject.projectDir}/third_party/double-conversion"
                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"
                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"
                arguments "-DANDROID_STL=c++_shared"
                cppFlags '-std=c++17 -Wunused-function'
            }
        }
        // Similar to other properties in the defaultConfig block,
        // you can configure the ndk block for each product flavor
        // in your build configuration.
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your app.
            abiFilters 'x86', 'x86_64', 'armeabi-v7a',
                    'arm64-v8a'
        }
    }

    buildTypes {
        debug {
            // 为了不和 release 版本冲突
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

   /* compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }*/
    kotlinOptions {
        jvmTarget = '11'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    buildFeatures.prefab = true
    buildFeatures {
        viewBinding true
        prefab true
    }
    namespace 'com.mgg.environmentcheck'

    buildFeatures {
        prefab true
    }
}

dependencies {
    def lifecycle_version = "2.6.2"
    compileOnly project(':hidden-api')
    implementation "dev.rikka.shizuku:api:13.1.4"
    implementation "dev.rikka.shizuku:provider:13.1.4"
    implementation "dev.rikka.tools.refine:runtime:4.3.0"
    implementation 'org.lsposed.hiddenapibypass:hiddenapibypass:4.3'
    implementation project(":CheckEnv")
    implementation project(":Core")
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'

    implementation 'com.google.crypto.tink:tink-android:1.8.0'

    // coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    implementation 'com.google.flatbuffers:flatbuffers-java:23.5.26'
    implementation 'com.github.getActivity:ToastUtils:10.5'
    implementation "com.github.skydoves:lazybones:1.0.4"
    implementation "com.github.skydoves:lazybones-viewmodel:1.0.4"

    implementation 'com.google.oboe:oboe:1.7.0'

    // https://mvnrepository.com/artifact/com.android.ndk.thirdparty
    implementation "com.android.ndk.thirdparty:curl:7.79.1-beta-1"
    implementation "com.android.ndk.thirdparty:jsoncpp:1.9.5-beta-1"
    implementation "com.android.ndk.thirdparty:openssl:1.1.1l-beta-1"
    implementation 'com.android.ndk.thirdparty:libpng:1.6.37-alpha-1'
    implementation 'com.android.ndk.thirdparty:googletest:1.11.0-beta-1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"
    // implementation 'com.android.encryption:aes:1.0.0'
    implementation 'com.google.android.gms:play-services-cronet:18.0.1'
    // uncomment out this one to generate lib binaries,
    // and also uncommented out the one in settings.gradle
    // after lib is generated, just comment them out again
    // api project(':gen-libs')
}
