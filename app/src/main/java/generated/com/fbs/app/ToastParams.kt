// automatically generated by the FlatBuffers compiler, do not modify

package com.fbs.app

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class ToastParams : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : ToastParams {
        __init(_i, _bb)
        return this
    }
    val content : String?
        get() {
            val o = __offset(4)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val contentAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun contentInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val duration : Int
        get() {
            val o = __offset(6)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_2_0_0()
        fun getRootAsToastParams(_bb: ByteBuffer): ToastParams = getRootAsToastParams(_bb, ToastParams())
        fun getRootAsToastParams(_bb: ByteBuffer, obj: ToastParams): ToastParams {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createToastParams(builder: FlatBufferBuilder, contentOffset: Int, duration: Int) : Int {
            builder.startTable(2)
            addDuration(builder, duration)
            addContent(builder, contentOffset)
            return endToastParams(builder)
        }
        fun startToastParams(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addContent(builder: FlatBufferBuilder, content: Int) = builder.addOffset(0, content, 0)
        fun addDuration(builder: FlatBufferBuilder, duration: Int) = builder.addInt(1, duration, 0)
        fun endToastParams(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishToastParamsBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset)
        fun finishSizePrefixedToastParamsBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset)
    }
}
