// automatically generated by the FlatBuffers compiler, do not modify

package com.fbs.app.main.viewmodel

import com.google.flatbuffers.*
import java.nio.*

@Suppress("unused")
class ShowError : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : ShowError {
        __init(_i, _bb)
        return this
    }
    val content : String?
        get() {
            val o = __offset(4)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val contentAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun contentInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_2_0_8()
        fun getRootAsShowError(_bb: ByteBuffer): ShowError = getRootAsShowError(_bb, ShowError())
        fun getRootAsShowError(_bb: ByteBuffer, obj: ShowError): ShowError {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createShowError(builder: FlatBufferBuilder, contentOffset: Int) : Int {
            builder.startTable(1)
            addContent(builder, contentOffset)
            return endShowError(builder)
        }
        fun startShowError(builder: FlatBufferBuilder) = builder.startTable(1)
        fun addContent(builder: FlatBufferBuilder, content: Int) = builder.addOffset(0, content, 0)
        fun endShowError(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
